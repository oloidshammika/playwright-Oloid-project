name: Playwright Tests - Ortoni Report Deployment

on:
  push:
    branches: [main, master]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      # --- Step 1: Checkout code ---
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Step 2: Setup Node.js ---
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      # --- Step 3: Install dependencies ---
      - name: Install dependencies
        run: npm ci

      # --- Step 4: Install Playwright browsers ---
      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      # --- Step 5: Run Playwright tests ---
      - name: Run Playwright tests (generate Ortoni report)
        run: npx playwright test Oloid_test/Oloid_admin_full_journey_test.spec.ts || true

      # --- Step 6: Verify Ortoni report folder ---
      - name: Verify Ortoni report folder
        run: |
          echo "üìÇ Checking ortoni-report folder contents..."
          ls -R ortoni-report || echo "‚ö†Ô∏è No ortoni-report folder found!"

          if [ ! -f "ortoni-report/ortoni-report.html" ]; then
            echo "‚ùå No ortoni-report.html found. Creating fallback file."
            mkdir -p ortoni-report
            echo "<html><body><h2>No report generated.</h2><p>Tests may have failed or no report was created.</p></body></html>" > ortoni-report/ortoni-report.html
          fi

      # --- Step 7: Rename to index.html for direct page load ---
      - name: Rename for GitHub Pages root
        run: |
          cp ortoni-report/ortoni-report.html ortoni-report/index.html
          echo "‚úÖ Renamed ortoni-report.html to index.html"

      # --- Step 8: Setup GitHub Pages ---
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      # --- Step 9: Upload report folder as artifact for Pages ---
      - name: Upload Ortoni report folder
        uses: actions/upload-pages-artifact@v3
        with:
          path: ortoni-report

      # --- Step 10: Deploy to GitHub Pages ---
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # --- Step 11: Add badge-style button to GitHub Actions summary ---
      - name: Add ‚ÄúOpen Report‚Äù button to GitHub summary
        if: always()
        run: |
          {
            echo "### ‚úÖ Ortoni Test Report Deployed Successfully"
            echo ""
            echo "<p align='center'>"
            echo "  <a href='https://oloidshammika.github.io/playwright-Oloid-project/' target='_blank'>"
            echo "    <img src='https://img.shields.io/badge/üìä_Open%20Ortoni%20Report-blue?style=for-the-badge' alt='Open Report' />"
            echo "  </a>"
            echo "</p>"
            echo ""
            echo "**üìÖ Date:** $(date)"
          } >> $GITHUB_STEP_SUMMARY
