name: Playwright Tests - Oloid Folder with Ortoni Report

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests for Oloid_test folder
        run: npx playwright test Oloid_test
        continue-on-error: true

      - name: Verify generated Ortoni report folder
        run: |
          echo "Listing ortoni-report contents before upload:"
          ls -R ortoni-report || echo "No ortoni-report directory found!"

      - name: Upload Ortoni Report Artifact
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: ortoni-report-artifact
          path: ortoni-report/
          if-no-files-found: error
          compression-level: 6

      - name: Archive Playwright test results
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: playwright-test-results
          path: playwright-report/

  deploy-report:
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Ortoni CLI
        run: npm install ortoni-report

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Download Ortoni Report Artifact
        uses: actions/download-artifact@v4
        with:
          name: ortoni-report-artifact
          path: /tmp/ortoni-download

      - name: Generate HTML Report from SQLite Data
        run: |
          set -e
          DEPLOY_DIR="$GITHUB_WORKSPACE/ortoni-report"
          DOWNLOAD_DIR="/tmp/ortoni-download"
          DB_FILE="$DOWNLOAD_DIR/ortoni-data-history.sqlite"
          DATA_FOLDER="$DOWNLOAD_DIR/ortoni-data"

          echo "Listing downloaded files:"
          ls -R "$DOWNLOAD_DIR" || true

          mkdir -p "$DEPLOY_DIR"

          if [ ! -f "$DB_FILE" ]; then
            echo "‚ùå ERROR: SQLite file not found at $DB_FILE"
            exit 1
          fi

          # Copy the SQLite DB and data folder
          cp "$DB_FILE" "$DEPLOY_DIR/"
          if [ -d "$DATA_FOLDER" ]; then
            cp -r "$DATA_FOLDER" "$DEPLOY_DIR/"
          fi
          echo "‚úÖ SQLite file and data folder copied successfully."

          cd "$DEPLOY_DIR"

          # Correct Ortoni CLI command
          echo "Running Ortoni report generator..."
          npx ortoni-report show-report \
            --database "./ortoni-data-history.sqlite" \
            --dir "." \
            --file ortoni-report.html \
            --port 3000 || echo "‚ö†Ô∏è Fallback: Ortoni CLI failed."

          # Create fallback if report missing
          if [ ! -f "ortoni-report.html" ]; then
            echo "<html><body><h2>No report generated.</h2></body></html>" > ortoni-report.html
            echo "‚ö†Ô∏è Created fallback empty report."
          fi

          # Create redirect index.html to ortoni-report.html
          echo '<meta http-equiv="refresh" content="0; url=ortoni-report.html" />' > index.html
          echo "‚úÖ Redirect index.html created."

          echo "‚úÖ Final files in deployment directory:"
          ls -l

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ortoni-report/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Print Deployed URL
        run: |
          echo "‚úÖ Report successfully deployed!"
          echo "üîó View your report at:"
          echo "https://oloidshammika.github.io/playwright-Oloid-project/"
